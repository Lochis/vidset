<html data-bs-theme="dark">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">    <title>Videset</title>
    <script src="https://code.jquery.com/jquery-3.7.0.min.js" integrity="sha256-2Pmvv0kuTBOenSvLm6bvfBSSHrUJ+3A7x6P5Ebd07/g=" crossorigin="anonymous"></script>
    <title>Vidset</title>
</head>
<body>

{{> navbar}}
<div class="container">
    <form> 
        <input type="file" name="video" id="video_file" class="form-control" required accept="video/*">
    </form>

    <div id="videodiv" class="mt-5 text-center">
        <video controls id="video-tag" width="720" height="405">
        <source id="video-source" src="/images/visualizer.mp4">
        Your browser does not support the video tag.
        </video>
    </div>

    <button type="button" class="btn btn-light" onclick="uploadShort();">Upload to Shorts</button>
</div>

<script>

    const videoSrc = document.querySelector("#video-source");
    const videoTag = document.querySelector("#video-tag");
    const inputTag = document.querySelector("#input-tag");

    var currentVidPath;

    function uploadShort(){
      const reqData = {
        videoPath: currentVidPath,
        title: "Testing123", 
        description: "test desc"
      };

      fetch('/dashboard/uploadShort', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(reqData),
      }).then(response => response.json())
        .then(data => console.log(data))
        .catch(error => console.error(error));
    }

    function readVideo(file, src, width, height) {
        var reader = new FileReader();

        reader.onload = function(e, src, width, height) {
          if (src != ""){
            videoSrc.src = e.target.result
          } else {
            videoSrc.src = src;
            videoTag.width = width;
            videoTag.height = height;
          }
        
        videoTag.load()
        }.bind(this)

        reader.readAsDataURL(file);
  }

   function processVideo(file){
    const formData = new FormData();
    formData.append('video', file);
    console.log(formData);
     
    fetch('/dashboard/resize', {
      method: 'POST',
      body: formData,
    })
    .then(response => response.json())
    .then(data => {
      // Handle the response from the server
      currentVidPath = "public/" + data.videoPath;
      console.log(videoTag);
      if (data.videoPath && data.videoWidth && data.videoHeight) {
        console.log('Video processing completed');

        videoTag.setAttribute("width", data.videoWidth);
        videoTag.setAttribute("height", data.videoHeight);

        // Update src of video-source
        videoSrc.setAttribute("src", data.videoPath);

        // Reload the video
        videoTag.load();
        
      } else {
        console.error('Video processing failed');
      }
    })
    .catch(error => {
      console.error('Video processing error:', error);
    });
   }

    $("input[type=file]").on('change',function(){
    readVideo(this.files[0], "");
    processVideo(this.files[0]);
});
      
    </script>

<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.7/dist/umd/popper.min.js" integrity="sha384-zYPOMqeu1DAVkHiLqWBUTcbYfZ8osu1Nd6Z89ify25QV9guujx43ITvfi12/QExE" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js" integrity="sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V" crossorigin="anonymous"></script>
</body>
</html>
